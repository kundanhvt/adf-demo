{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "fifa",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "fifa_result",
						"type": "DatasetReference"
					},
					"name": "sink1",
					"rejectedDataLinkedService": {
						"referenceName": "BlobLinkedService",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          date as string,",
				"          home_team as string,",
				"          away_team as string,",
				"          home_team_continent as string,",
				"          away_team_continent as string,",
				"          home_team_fifa_rank as short,",
				"          away_team_fifa_rank as short,",
				"          home_team_total_fifa_points as boolean,",
				"          away_team_total_fifa_points as boolean,",
				"          home_team_score as short,",
				"          away_team_score as short,",
				"          tournament as string,",
				"          city as string,",
				"          country as string,",
				"          neutral_location as boolean,",
				"          shoot_out as boolean,",
				"          home_team_result as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 derive(result = iif(equals(home_team_score, away_team_score), \"draw\", iif(greater(home_team_score,away_team_score), home_team, away_team))) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false) ~> sink1"
			]
		}
	}
}